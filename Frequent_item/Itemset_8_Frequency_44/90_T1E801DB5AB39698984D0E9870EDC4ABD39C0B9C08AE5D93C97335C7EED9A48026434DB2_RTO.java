//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.12.22 at 09:42:06 AM CET 
//


package no.kith.xmlstds;

import java.math.BigInteger;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for RTO complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RTO"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="NUM" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/&gt;
 *         &lt;element name="DENOM" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RTO", propOrder = {
    "num",
    "denom"
})
public final class RTO {

    @XmlElement(name = "NUM")
    private final BigInteger num;
    @XmlElement(name = "DENOM")
    private final BigInteger denom;

    public RTO(final BigInteger num, final BigInteger denom) {
        this.num = num;
        this.denom = denom;
    }

    /**
     * Used by JAX-B
     * 
     */
    protected RTO() {
        this.num = null;
        this.denom = null;
    }

    /**
     * Gets the value of the num property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNUM() {
        return num;
    }

    /**
     * Gets the value of the denom property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDENOM() {
        return denom;
    }

    public static RTO.RTOBuilder RTOBuilder() {
        return new RTO.RTOBuilder();
    }

    public static class RTOBuilder {

        private BigInteger num;
        private BigInteger denom;

        public RTO.RTOBuilder withNum(final BigInteger num) {
            this.num = num;
            return this;
        }

        public RTO.RTOBuilder withDenom(final BigInteger denom) {
            this.denom = denom;
            return this;
        }

        public RTO build() {
            return new RTO(num, denom);
        }

    }

}
