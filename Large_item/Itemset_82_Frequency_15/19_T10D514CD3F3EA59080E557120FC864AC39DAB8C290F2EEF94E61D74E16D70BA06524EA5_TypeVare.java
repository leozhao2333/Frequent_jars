//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.12.22 at 09:40:30 AM CET 
//


package no.kith.xmlstds.eresept.forskrivning._2013_10_08;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeVare complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeVare"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Nr" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="Navn" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2013-10-08}ProduktInfoVare" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2013-10-08}Leverandor" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2013-10-08}PrisVare" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.kith.no/xmlstds/eresept/forskrivning/2013-10-08}Refusjon" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeVare", propOrder = {
    "nr",
    "navn",
    "produktInfoVare",
    "leverandor",
    "prisVare",
    "refusjon"
})
@XmlSeeAlso({
    MedForbMatr.class,
    Naringsmiddel.class
})
public class TypeVare {

    @XmlElement(name = "Nr", required = true)
    private final String nr;
    @XmlElement(name = "Navn", required = true)
    private final String navn;
    @XmlElement(name = "ProduktInfoVare")
    private final ProduktInfoVare produktInfoVare;
    @XmlElement(name = "Leverandor")
    private final Leverandor leverandor;
    @XmlElement(name = "PrisVare")
    private final List<PrisVare> prisVare;
    @XmlElement(name = "Refusjon")
    private final Refusjon refusjon;

    public TypeVare(final String nr, final String navn, final ProduktInfoVare produktInfoVare, final Leverandor leverandor, final List<PrisVare> prisVare, final Refusjon refusjon) {
        this.nr = nr;
        this.navn = navn;
        this.produktInfoVare = produktInfoVare;
        this.leverandor = leverandor;
        if (prisVare == null) {
            this.prisVare = null;
        } else {
            this.prisVare = new ArrayList<PrisVare>(prisVare);
        }
        this.refusjon = refusjon;
    }

    /**
     * Used by JAX-B
     * 
     */
    protected TypeVare() {
        this.nr = null;
        this.navn = null;
        this.produktInfoVare = null;
        this.leverandor = null;
        this.prisVare = null;
        this.refusjon = null;
    }

    /**
     * Gets the value of the nr property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNr() {
        return nr;
    }

    /**
     * Gets the value of the navn property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNavn() {
        return navn;
    }

    /**
     * Gets the value of the produktInfoVare property.
     * 
     * @return
     *     possible object is
     *     {@link ProduktInfoVare }
     *     
     */
    public ProduktInfoVare getProduktInfoVare() {
        return produktInfoVare;
    }

    /**
     * Gets the value of the leverandor property.
     * 
     * @return
     *     possible object is
     *     {@link Leverandor }
     *     
     */
    public Leverandor getLeverandor() {
        return leverandor;
    }

    /**
     * Gets the value of the refusjon property.
     * 
     * @return
     *     possible object is
     *     {@link Refusjon }
     *     
     */
    public Refusjon getRefusjon() {
        return refusjon;
    }

    public List<PrisVare> getPrisVare() {
        List<PrisVare> ret;
        if (prisVare == null) {
            ret = Collections.emptyList();
        } else {
            ret = Collections.unmodifiableList(prisVare);
        }
        return ret;
    }

    public static TypeVare.TypeVareBuilder typeVareBuilder() {
        return new TypeVare.TypeVareBuilder();
    }

    public static class TypeVareBuilder {

        private String nr;
        private String navn;
        private ProduktInfoVare produktInfoVare;
        private Leverandor leverandor;
        private List<PrisVare> prisVare = new ArrayList<PrisVare>();
        private Refusjon refusjon;

        public TypeVare.TypeVareBuilder withNr(final String nr) {
            this.nr = nr;
            return this;
        }

        public TypeVare.TypeVareBuilder withNavn(final String navn) {
            this.navn = navn;
            return this;
        }

        public TypeVare.TypeVareBuilder withProduktInfoVare(final ProduktInfoVare produktInfoVare) {
            this.produktInfoVare = produktInfoVare;
            return this;
        }

        public TypeVare.TypeVareBuilder withLeverandor(final Leverandor leverandor) {
            this.leverandor = leverandor;
            return this;
        }

        public TypeVare.TypeVareBuilder withPrisVare(final List<PrisVare> prisVare) {
            this.prisVare = prisVare;
            return this;
        }

        public TypeVare.TypeVareBuilder addPrisVare(final PrisVare prisVare) {
            this.prisVare.add(prisVare);
            return this;
        }

        public TypeVare.TypeVareBuilder withRefusjon(final Refusjon refusjon) {
            this.refusjon = refusjon;
            return this;
        }

        public TypeVare build() {
            if (nr == null) {
                throw new NullPointerException("Required field 'nr' have to be assigned a value.");
            }
            if (navn == null) {
                throw new NullPointerException("Required field 'navn' have to be assigned a value.");
            }
            return new TypeVare(nr, navn, produktInfoVare, leverandor, prisVare, refusjon);
        }

    }

}
